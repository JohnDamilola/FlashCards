{"ast":null,"code":"var _jsxFileName = \"/Users/leohsiang/Documents/NCSU Graduate School/CSC510/FlashCards/frontend/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport Nav from './containers/Nav';\nimport Form from './views/Form';\nimport CardList from './views/CardList';\nimport CardListEmpty from './components/CardListEmpty';\nimport Practice from './views/Practice';\nimport parseHash from './util/parse-hash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      path,\n      params\n    } = parseHash(window.location.hash);\n    const cards = localStorage.getItem('cards');\n    this.state = {\n      path,\n      params,\n      cards: JSON.parse(cards) || []\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.deleteCard = this.deleteCard.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', () => {\n      const {\n        path,\n        params\n      } = parseHash(window.location.hash);\n      this.setState({\n        path,\n        params\n      });\n    });\n    window.addEventListener('beforeunload', () => {\n      localStorage.setItem('cards', JSON.stringify(this.state.cards));\n    });\n  }\n\n  addCard(newCard) {\n    const cards = [...this.state.cards, newCard];\n    this.setState({\n      cards\n    });\n  }\n\n  editCard(newCard) {\n    const {\n      params\n    } = this.state;\n    const editIndex = parseInt(params.cardIdx, 10) - 1;\n    const cards = this.state.cards.map((card, index) => {\n      if (index === editIndex) return newCard;\n      return card;\n    });\n    this.setState({\n      cards\n    });\n  }\n\n  deleteCard(deleteIndex) {\n    const cards = [...this.state.cards];\n    cards.splice(deleteIndex, 1);\n    this.setState({\n      cards\n    });\n  }\n\n  handleFormSubmit(newCard) {\n    this.state.params.hasOwnProperty('cardIdx') ? this.editCard(newCard) : this.addCard(newCard);\n  }\n\n  renderForm() {\n    const {\n      cards,\n      params\n    } = this.state;\n    const editIndex = parseInt(params.cardIdx, 10) - 1;\n    const cardToEdit = cards[editIndex] || null;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      cardToEdit: cardToEdit,\n      handleFormSubmit: this.handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n\n  renderCards() {\n    if (this.state.params.cardIdx) return this.renderForm();\n    return this.state.cards.length > 0 ? /*#__PURE__*/_jsxDEV(CardList, {\n      currentCards: this.state.cards,\n      deleteCard: this.deleteCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CardListEmpty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }\n\n  renderPractice() {\n    return this.state.cards.length > 0 ? /*#__PURE__*/_jsxDEV(Practice, {\n      cardList: this.state.cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CardListEmpty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  }\n\n  renderView() {\n    switch (this.state.path) {\n      case 'new-card':\n        return this.renderForm();\n\n      case 'cards':\n        return this.renderCards();\n\n      case 'practice':\n        return this.renderPractice();\n\n      default:\n        return this.renderCards();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        path: this.state.path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), this.renderView()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","Fragment","Nav","Form","CardList","CardListEmpty","Practice","parseHash","App","constructor","props","path","params","window","location","hash","cards","localStorage","getItem","state","JSON","parse","handleFormSubmit","bind","deleteCard","componentDidMount","addEventListener","setState","setItem","stringify","addCard","newCard","editCard","editIndex","parseInt","cardIdx","map","card","index","deleteIndex","splice","hasOwnProperty","renderForm","cardToEdit","renderCards","length","renderPractice","renderView","render"],"sources":["/Users/leohsiang/Documents/NCSU Graduate School/CSC510/FlashCards/frontend/src/App.js"],"sourcesContent":["import React, { Component, Fragment } from 'react'\nimport Nav from './containers/Nav'\nimport Form from './views/Form'\nimport CardList from './views/CardList'\nimport CardListEmpty from './components/CardListEmpty'\nimport Practice from './views/Practice'\nimport parseHash from './util/parse-hash'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    const { path, params } = parseHash(window.location.hash)\n    const cards = localStorage.getItem('cards')\n    this.state = {\n      path,\n      params,\n      cards: JSON.parse(cards) || []\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    this.deleteCard = this.deleteCard.bind(this)\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', () => {\n      const { path, params } = parseHash(window.location.hash)\n      this.setState({ path, params })\n    })\n    window.addEventListener('beforeunload', () => {\n      localStorage.setItem('cards', JSON.stringify(this.state.cards))\n    })\n  }\n\n  addCard(newCard) {\n    const cards = [...this.state.cards, newCard]\n    this.setState({ cards })\n  }\n\n  editCard(newCard) {\n    const { params } = this.state\n    const editIndex = parseInt(params.cardIdx, 10) - 1\n    const cards = this.state.cards.map((card, index) => {\n      if (index === editIndex) return newCard\n      return card\n    })\n    this.setState({ cards })\n  }\n\n  deleteCard(deleteIndex) {\n    const cards = [...this.state.cards]\n    cards.splice(deleteIndex, 1)\n    this.setState({ cards })\n  }\n\n  handleFormSubmit(newCard) {\n    this.state.params.hasOwnProperty('cardIdx')\n      ? this.editCard(newCard)\n      : this.addCard(newCard)\n  }\n\n  renderForm() {\n    const { cards, params } = this.state\n    const editIndex = parseInt(params.cardIdx, 10) - 1\n    const cardToEdit = cards[editIndex] || null\n    return <Form\n      cardToEdit={cardToEdit}\n      handleFormSubmit={this.handleFormSubmit} />\n  }\n\n  renderCards() {\n    if (this.state.params.cardIdx) return this.renderForm()\n    return this.state.cards.length > 0\n      ? <CardList\n        currentCards={this.state.cards}\n        deleteCard={this.deleteCard} />\n      : <CardListEmpty />\n  }\n\n  renderPractice() {\n    return this.state.cards.length > 0\n      ? <Practice cardList={this.state.cards} />\n      : <CardListEmpty />\n  }\n\n  renderView() {\n    switch (this.state.path) {\n      case 'new-card':\n        return this.renderForm()\n      case 'cards':\n        return this.renderCards()\n      case 'practice':\n        return this.renderPractice()\n      default:\n        return this.renderCards()\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Nav path={this.state.path}/>\n        {this.renderView()}\n      </Fragment>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}